pipeline{
    agent any
    stages{
        stage('fetch project by git'){
            steps{
                echo 'git started'
                git 'https://github.com/KaranDhillon73/jenkins-demo.git'
                echo 'git completed'
            }
        }
        stage('Build Project by maven'){
            steps{
                echo 'maven build started'
                withMaven(globalMavenSettingsConfig: '', jdk: 'java11', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                    bat 'mvn -f MavenProject/ clean package'
                }
                echo 'maven build completed'
            }
        }
        stage('Archiving the artifact'){
            steps{
                echo 'Archiving the artifact Started'
                archiveArtifacts artifacts: '**/*.war', followSymlinks: false
                echo 'Archiving the artifact Completed'   
            }
        }
        stage('Generating reports'){
            steps{
                parallel("Findbugs Report":{
                    node('window'){
                         withMaven(globalMavenSettingsConfig: '', jdk: 'java11', maven: 'maven3', mavenSettingsConfig: '', options: [findbugsPublisher()], traceability: true) {
                            bat 'mkdir findbug & cd findbug'
                            git 'https://github.com/KaranDhillon73/jenkins-demo.git'
                            bat 'cd MavenProject & mvn test findbugs:findbugs'
                            recordIssues(tools: [findBugs(pattern: '**/target/findbugsXml.xml', useRankAsPriority: true)])
                         }
                    }
                    
                },"Cobertura report":{
                    node('window'){
                        withMaven(globalMavenSettingsConfig: '', jdk: 'JAVA', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                            bat 'mkdir cobertura1 & cd cobertura1'
                            git 'https://github.com/KaranDhillon73/jenkins-demo.git'
                            bat 'cd MavenProject & mvn clean cobertura:cobertura'
                            cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: '**/target/site/cobertura/coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
                         }
                    }
                })
            }
        }
        stage('deploying artifact to tomcat 8.*'){
            steps{
                echo 'Starting Deployment of Artifact'
                deploy adapters: [tomcat8(credentialsId: '011dff00-5d7a-49d3-bd72-20a30ac57678', path: '', url: 'http://127.0.0.1:8082/')], contextPath: 'FinalProject', onFailure: false, war: '**/*.war'
                echo 'Completed Deployment of Artifact'
            }
        }
        stage('Publishing HTML Report'){
            steps{
                echo 'Starting publishing HTML Report'
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                echo 'Completed publishing HTML Report'
            }
        }
        stage('cleaning workspace and sending email'){
            steps{
                echo 'started cleaning up the workspace'
                cleanWs()
                echo 'Done cleaning the workspace'
            }
            post{
                success{
                    emailext body: 'Deployment of the final project is completed to Tomcat and Artifact if Archived. Please log in to http://127.0.0.1:8082 for mode details.', subject: 'Final Project Deployment Notification', to: '$Email_Recipient'
                }
                failure{
                    emailext body: 'Deployment of the final project is failed', subject: 'Final Project Deployment Notification', to: '$Email_Recipient'
                }
            }
        }
    }
}
